#!/usr/bin/env python3
from datamodel_parser.application import Argument
from datamodel_parser.application import Store
from json import dumps

print('Templating Database.')
arg = Argument('parse_html')
options = arg.options if arg else None
store = Store(options=options) if options else None
logger = store.logger if store else None
ready = options and store and logger
ready = ready and store.ready
if not ready:
    print('Fail! ready: {}'.format(ready))
    exit(1)
else:
    template = 'datamodel/datamodel_md.txt'
    store.set_tree_edition()
    store.set_path(path=options.path)
    store.split_path()
    store.set_html_text()
    store.set_file()
    store.render_template(template=template)
    store.exit()

'''
Examples:
File Type 1)
    datamodel_template --path datamodel/files/MANGA_SPECTRO_REDUX/DRPVER/PLATE4/stack/manga-RSS.html -l debug -v
        
File Type 2)
    datamodel_template --path datamodel/files/APOGEE_REDUX/APRED_VERS/red/MJD5/ap2D.html -l debug -v
    datamodel_template --path datamodel/files/APOGEE_REDUX/APRED_VERS/red/MJD5/ap2Dmodel.html -l debug -v

File Type 3)
    datamodel_template --path datamodel/files/BOSS_SPECTRO_DATA/MJD/sdR.html -l debug -v

File Type 4)
    datamodel_template --path datamodel/files/MANGA_TARGET/MANGATARGET_VERSION/MaNGA_targets_extNSA_tiled_ancillary.html -l debug -v

'''
